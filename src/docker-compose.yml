services:
  tfst.api:
    container_name: tfst.api
    image: tfst/api
    build:
      context: .
      dockerfile: backend/TFST.API/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - tfst.sql_server
      - tfst.auth
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5000
      - ConnectionStrings__DefaultConnection=Server=tfst.sql_server;Database=TFST;User Id=sa;Password=YourStrongPassword!;TrustServerCertificate=True
    networks:
      - tfst_network
  tfst.auth:
    container_name: tfst.auth
    image: tfst/auth
    build:
      context: .
      dockerfile: backend/TFST.AuthServer/Dockerfile
    ports:
      - "6000:6000"
    depends_on:
      - tfst.sql_server
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:6000
      - ConnectionStrings__DefaultConnection=Server=tfst.sql_server;Database=TFST;User Id=sa;Password=YourStrongPassword!;TrustServerCertificate=True
    networks:
      - tfst_network
  tfst.sql_server:
    container_name: tfst.sql_server
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    environment:
      SA_PASSWORD: "YourStrongPassword!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      MSSQL_TCP_PORT: "1433"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - tfst_network
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrongPassword!", "-Q", "SELECT 1" ]
      interval: 10s
      retries: 5
      start_period: 10s
volumes:
  mssql_data:
    name: tfst_mssql_data

networks:
  tfst_network:
    driver: bridge
