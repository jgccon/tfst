services:
  tfst.api:
    container_name: tfst.api
    image: tfst/api
    build:
      context: .
      dockerfile: backend/TFST.API/Dockerfile
    ports:
      - "5000:5000" # HTTP
      - "5001:5001" # HTTPS
    depends_on:
      - tfst.sql_server
      - tfst.auth
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Password123*
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/tfst_dev_cert.pfx
    volumes:
      - ./certs:/app/certs:ro
    networks:
      - tfst_network

  tfst.auth:
    container_name: tfst.auth
    image: tfst/auth
    build:
      context: .
      dockerfile: backend/TFST.AuthServer/Dockerfile
    ports:
      - "6000:6000" # HTTP
      - "6001:6001" # HTTPS
    depends_on:
      - tfst.sql_server
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:6000;https://+:6001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Password123*
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/tfst_dev_cert.pfx
    volumes:
      - ./certs:/app/certs:ro
    networks:
      - tfst_network

  tfst.sql_server:
    container_name: tfst.sql_server
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    env_file:
      - .env
    environment:
      SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      MSSQL_TCP_PORT: "1433"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - tfst_network

  tfst.app:
    container_name: tfst.app
    build:
      context: ./clients/tfst-app
      dockerfile: Dockerfile.dev
    image: tfst/app
    ports:
      - "4200:4200"
    working_dir: /app
    volumes:
      - ./clients/tfst-app:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - tfst_network
 
  tfst.dev:
    container_name: tfst.dev
    build:
      context: ./clients/tfst-dev
      dockerfile: Dockerfile
    image: tfst/dev
    ports:
      - "3000:3000"
    working_dir: /app
    volumes:
      - ./clients/tfst-dev:/app
      - /app/node_modules
    networks:
      - tfst_network

volumes:
  mssql_data:
    name: tfst_mssql_data

networks:
  tfst_network:
    driver: bridge
